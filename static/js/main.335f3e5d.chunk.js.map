{"version":3,"sources":["assets/pokeGif.gif","components/PokemonCard.js","components/PokemonsContainer.js","App.js","assets/fonts/Pokemon-Solid.ttf","index.js"],"names":["LoadingPokemon","className","src","pokeGif","height","width","alt","PokemonCard","props","rotation","Math","floor","random","style","transform","image","name","type","hp","speed","attack","specialAttack","defense","specialDefense","PokemonsContainer","this","pokemonList","pokemons","map","pokemon","Component","App","state","loading","getPokemon","a","id","POKEMON","SPECIES","fetch","pokemonResponse","json","speciesResponse","speciesData","EVOLUTION_CHAIN","evolution_chain","url","evolutionResponse","evolutionData","evolutionChain","chain","evoChain","push","species","hasOwnProperty","console","log","evo","species_name","pokeData","img","Image","types","stats","base_stat","newPokemon","setState","onload","setTimeout","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.335f3e5d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/pokeGif.c1f829e7.gif\";","/* eslint-disable jsx-a11y/img-redundant-alt */\r\nimport React from 'react'\r\nimport pokeGif from '../assets/pokeGif.gif'\r\n\r\nconst PokemonCard = (props) => {    \r\n    let rotation = Math.floor(Math.random() * (5 - (-5) + 1)) + (-5);\r\n    \r\n    return (\r\n        <div className=\"col-12 col-md-6 col-xl-4 mx-auto\">\r\n            <div className=\"card text-center p-3 mx-auto\" style={{transform: `rotate(${rotation}deg)`}}>\r\n                <img className=\"card-img-top \" src={props.image} alt=\"Card image cap\" />\r\n                <div className=\"card-header fw-bolder text-uppercase pokeName\">\r\n                    {props.name}\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"pokeType\">{props.type}</h5>\r\n                    <table className=\"table  table-borderless text-center mb-0\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <th>HP</th>\r\n                                <td>{props.hp}</td>\r\n                                <th>Speed</th>\r\n                                <td>{props.speed}</td>\r\n                            </tr> \r\n                            <tr>\r\n                                <th>Attack</th>\r\n                                <td>{props.attack}</td>\r\n                                <th>Special attack</th>\r\n                                <td>{props.specialAttack}</td>\r\n                            </tr>   \r\n                            <tr>\r\n                                <th>Defense</th>\r\n                                <td>{props.defense}</td>\r\n                                <th>Special defense</th>\r\n                                <td>{props.specialDefense}</td>\r\n                            </tr>                              \r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst LoadingPokemon = () => {\r\n    return (\r\n        <div className=\"col-12\">\r\n            <div className=\"text-center\">\r\n                <img src={pokeGif} height={300} width={400} alt=\"loading...\" />\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default PokemonCard;\r\nexport {LoadingPokemon};","import React, { Component } from 'react'\r\nimport PokemonCard from './PokemonCard'\r\n\r\n\r\nexport default class PokemonsContainer extends Component {\r\n    render() {\r\n        let pokemon = this.props.pokemonList.pokemons;\r\n        return pokemon.map(pokemon =>\r\n            <PokemonCard \r\n                name={pokemon.name}\r\n                image={pokemon.image} \r\n                type={pokemon.type}\r\n                hp={pokemon.hp}\r\n                attack={pokemon.attack}\r\n                defense={pokemon.defense}\r\n                specialAttack={pokemon.specialAttack}\r\n                specialDefense={pokemon.specialDefense}     \r\n                speed={pokemon.speed}\r\n            />\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {LoadingPokemon} from './components/PokemonCard'\r\nimport './App.css'\r\nimport PokemonsContainer from './components/PokemonsContainer'\r\n\r\nexport default class App extends Component {\r\n\r\n  state = {\r\n    pokemons: '',\r\n    loading: true\r\n  }  \r\n\r\n  getPokemon = async () => {\r\n    const id = Math.floor(Math.random()*(152-1))+1;\r\n    const POKEMON = `https://pokeapi.co/api/v2/pokemon/${id}`\r\n    const SPECIES = `https://pokeapi.co/api/v2/pokemon-species/${id}`\r\n    const pokemonResponse = await fetch(POKEMON);\r\n    const pokemonData = await pokemonResponse.json();\r\n    const speciesResponse = await fetch(SPECIES);\r\n    const speciesData = await speciesResponse.json();\r\n    const EVOLUTION_CHAIN = speciesData.evolution_chain.url\r\n    const evolutionResponse = await fetch(EVOLUTION_CHAIN);\r\n    const evolutionData = await evolutionResponse.json();\r\n\r\n    let evolutionChain = evolutionData.chain;\r\n    let evoChain = [];\r\n\r\n    do {\r\n      evoChain.push({\r\n        \"species_name\": evolutionChain.species.name\r\n      })\r\n      evolutionChain = evolutionChain['evolves_to'][0];\r\n    } while (!!evolutionChain && evolutionChain.hasOwnProperty('evolves_to'));\r\n\r\n    console.log(evoChain);    \r\n    for await (let evo of evoChain) {\r\n      const POKEMON = await fetch(`https://pokeapi.co/api/v2/pokemon/${evo.species_name}`);\r\n      const pokeData = await POKEMON.json();\r\n      var img = new Image();\r\n      img.src = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${pokeData.id}.png`;      \r\n      const newPokemon = await {\r\n        name: pokeData.name,\r\n        image: img.src,\r\n        type: pokeData.types[0].type.name,\r\n        hp: pokeData.stats[0].base_stat,\r\n        attack: pokeData.stats[1].base_stat,\r\n        defense: pokeData.stats[2].base_stat,\r\n        specialAttack: pokeData.stats[3].base_stat,\r\n        specialDefense: pokeData.stats[4].base_stat,\r\n        speed: pokeData.stats[5].base_stat\r\n      };      \r\n      this.setState({\r\n        pokemons: [...this.state.pokemons, newPokemon]\r\n      });\r\n    }    \r\n\r\n    // Last image loaded\r\n    img.onload = async () => {\r\n      this.setState({loading: false})\r\n    }\r\n  }\r\n  \r\n  componentDidMount() {\r\n    setTimeout(()=>{\r\n      this.getPokemon();\r\n    });    \r\n  }\r\n\r\n  render() {\r\n    if (!this.state.loading) {\r\n      return (\r\n        <div className=\"main\">\r\n          <h1 className=\"col-12 text-center pt-4 pt-sm-1 title\">Pokemon Generator</h1>\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <PokemonsContainer getPokemon={this.getPokemon} pokemonList={this.state} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    else {\r\n      return (\r\n        <div className=\"container-fluid bg-white\">\r\n          <div className=\"row\">\r\n            <LoadingPokemon />\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/Pokemon-Solid.deb49591.ttf\";","import { render } from '@testing-library/react'\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App';\r\nimport './assets/fonts/Pokemon-Solid.ttf'\r\n\r\n\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n  <App/>,\r\n  document.getElementById('app')\r\n);\r\n"],"sourceRoot":""}