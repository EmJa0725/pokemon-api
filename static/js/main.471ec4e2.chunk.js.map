{"version":3,"sources":["assets/pokeGif.gif","components/PokemonCard.js","components/PokemonsContainer.js","App.js","index.js"],"names":["LoadingPokemon","props","className","src","pokeGif","height","width","alt","PokemonCard","rotation","Math","floor","random","console","log","name","style","transform","image","type","hp","speed","attack","specialAttack","defense","specialDefense","PokemonsContainer","this","pokemonList","pokemons","map","pokemon","Component","App","state","loading","getPokemon","e","a","id","POKEMON","SPECIES","fetch","pokemonResponse","json","speciesResponse","speciesData","EVOLUTION_CHAIN","evolution_chain","url","evolutionResponse","evolutionData","evolutionChain","chain","evoChain","push","species","hasOwnProperty","evo","species_name","pokeData","img","Image","types","stats","base_stat","newPokemon","setState","onload","setTimeout","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.471ec4e2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/pokeGif.c1f829e7.gif\";","import React from 'react'\r\nimport pokeGif from '../assets/pokeGif.gif'\r\n\r\nconst PokemonCard = (props) => {    \r\n    var rotation = Math.floor(Math.random() * (5 - (-5) + 1)) + (-5);\r\n    console.log('props')\r\n    console.log(props.name);\r\n    \r\n    return (\r\n        <div className=\"col-12 col-md-6 col-xl-4 mx-auto\">\r\n            <div className=\"card text-center p-3 mx-auto\" style={{transform: `rotate(${rotation}deg)`}}>\r\n                <img className=\"card-img-top \" src={props.image} alt=\"Card image cap\" />\r\n                <div className=\"card-header fw-bolder text-uppercase pokeName\">\r\n                    {props.name}\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"pokeType\">{props.type}</h5>\r\n                    <table className=\"table  table-borderless text-center mb-0\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <th>HP</th>\r\n                                <td>{props.hp}</td>\r\n                                <th>Speed</th>\r\n                                <td>{props.speed}</td>\r\n                            </tr> \r\n                            <tr>\r\n                                <th>Attack</th>\r\n                                <td>{props.attack}</td>\r\n                                <th>Special attack</th>\r\n                                <td>{props.specialAttack}</td>\r\n                            </tr>   \r\n                            <tr>\r\n                                <th>Defense</th>\r\n                                <td>{props.defense}</td>\r\n                                <th>Special defense</th>\r\n                                <td>{props.specialDefense}</td>\r\n                            </tr>                              \r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst LoadingPokemon = (props) => {\r\n    return (\r\n        <div className=\"col-12\">\r\n            <div className=\"text-center\">\r\n                <img src={pokeGif} height={300} width={400} alt=\"loading...\" />\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default PokemonCard;\r\nexport {LoadingPokemon};","import React, { Component } from 'react'\r\nimport PokemonCard from './PokemonCard'\r\n\r\n\r\nexport default class PokemonsContainer extends Component {\r\n    render() {\r\n        var pokemon = this.props.pokemonList.pokemons;\r\n        return pokemon.map(pokemon =>\r\n            <PokemonCard \r\n                name={pokemon.name}\r\n                image={pokemon.image} \r\n                type={pokemon.type}\r\n                hp={pokemon.hp}\r\n                attack={pokemon.attack}\r\n                defense={pokemon.defense}\r\n                specialAttack={pokemon.specialAttack}\r\n                specialDefense={pokemon.specialDefense}     \r\n                speed={pokemon.speed}\r\n            />\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {LoadingPokemon} from './components/PokemonCard'\r\nimport './App.css'\r\nimport PokemonsContainer from './components/PokemonsContainer'\r\n\r\nexport default class App extends Component {\r\n\r\n  state = {\r\n    pokemons: '',\r\n    loading: true\r\n  }  \r\n\r\n  getPokemon = async (e) => {\r\n    console.log('Loading...')\r\n    const id = Math.floor(Math.random()*(152-1))+1;\r\n    const POKEMON = `https://pokeapi.co/api/v2/pokemon/${id}`\r\n    const SPECIES = `https://pokeapi.co/api/v2/pokemon-species/${id}`\r\n    const pokemonResponse = await fetch(POKEMON);\r\n    const pokemonData = await pokemonResponse.json();\r\n    const speciesResponse = await fetch(SPECIES);\r\n    const speciesData = await speciesResponse.json();\r\n    const EVOLUTION_CHAIN = speciesData.evolution_chain.url\r\n    const evolutionResponse = await fetch(EVOLUTION_CHAIN);\r\n    const evolutionData = await evolutionResponse.json();\r\n\r\n    var evolutionChain = evolutionData.chain;\r\n    var evoChain = [];\r\n\r\n    do {\r\n      evoChain.push({\r\n        \"species_name\": evolutionChain.species.name\r\n      })\r\n      evolutionChain = evolutionChain['evolves_to'][0];\r\n    } while (!!evolutionChain && evolutionChain.hasOwnProperty('evolves_to'));\r\n\r\n    console.log(evoChain);    \r\n    for await (let evo of evoChain) {\r\n      const POKEMON = await fetch(`https://pokeapi.co/api/v2/pokemon/${evo.species_name}`);\r\n      const pokeData = await POKEMON.json();\r\n      var img = new Image();\r\n      img.src = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${pokeData.id}.png`;      \r\n      const newPokemon = await {\r\n        name: pokeData.name,\r\n        image: img.src,\r\n        type: pokeData.types[0].type.name,\r\n        hp: pokeData.stats[0].base_stat,\r\n        attack: pokeData.stats[1].base_stat,\r\n        defense: pokeData.stats[2].base_stat,\r\n        specialAttack: pokeData.stats[3].base_stat,\r\n        specialDefense: pokeData.stats[4].base_stat,\r\n        speed: pokeData.stats[5].base_stat\r\n      };      \r\n      this.setState({\r\n        pokemons: [...this.state.pokemons, newPokemon]\r\n      });\r\n    }    \r\n\r\n    // Last image loaded\r\n    img.onload = async () => {\r\n      console.log(img.src)\r\n      this.setState({loading: false})\r\n    }\r\n    // console.log(pokemonData);\r\n    // console.log(evolutionData);\r\n    // console.log(evolutionChain.evolves_to);  \r\n  }\r\n  \r\n  componentDidMount() {\r\n    setTimeout(()=>{\r\n      this.getPokemon();\r\n    });    \r\n  }\r\n\r\n  render() {\r\n    if (!this.state.loading) {\r\n      return (\r\n        <div className=\"main\">\r\n          <h1 className=\"col-12 text-center pt-4 title\">Random Pokemon Generator</h1>\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <PokemonsContainer getPokemon={this.getPokemon} pokemonList={this.state} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    else {\r\n      return (\r\n        <div className=\"container-fluid bg-white\">\r\n          <div className=\"row\">\r\n            <LoadingPokemon />\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\n","import { render } from '@testing-library/react'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App';\n\n\nimport \"./index.css\";\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('app')\n);\n"],"sourceRoot":""}